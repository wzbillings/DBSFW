{
  "hash": "50b244a5e970b4339101702ed8271cc1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Chapter 2: Measuring Uncertainty\"\nauthor: \"Zane Billings\"\ndate: \"2022-12-07\"\n---\n\n\n\n## Q1\n\n::: {.callout-note appearance=\"simple\"}\n\nWhat is the probability of rolling two six-sided dice and getting a value\ngreater than 7?\n\n:::\n\nIn general, I think it's worth solving this problem via simulation, because\nsolving via enumeration scales much worse. (We could also solve this problem\nanalytically, but that scales even worse than the enumerative solution.) So\nfirst I'll show how to solve via simulation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# The number of simulations we will do. As this number gets larger, our\n# simulated probability will approach the theoretical probability.\nN_rolls <- 10000\n\n# Simulate the two die rolls. You could do this with one call of sample but\n# for expository purposes this is easier.\ndie_1 <- sample(1:6, N_rolls, replace = TRUE)\ndie_2 <- sample(1:6, N_rolls, replace = TRUE)\n\n# Calculate the proportion of sums that are greater than 7\nsum <- die_1 + die_2\nmean(sum > 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4282\n```\n\n\n:::\n:::\n\n\n\nWe can also use R to solve this problem by enumeration.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npossible_rolls <- expand.grid(die_1 = 1:6, die_2 = 1:6)\npossible_rolls$sum <- possible_rolls$die_1 + possible_rolls$die_2\n\nmean(possible_rolls$sum > 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4166667\n```\n\n\n:::\n:::\n\n\n\nAs you can see, our simulated solution is extremely close to the \"true\" answer\nthat we get by enumerating the sample space. If you prefer the answer as a\nfraction, we can also just count.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of possible combinations that sum to > 7\nsum(possible_rolls$sum  > 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n\n```{.r .cell-code}\n# Number of possible combinations\nnrow(possible_rolls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 36\n```\n\n\n:::\n:::\n\n\n\nSo 15 out of the 36 possible combinations have a sum greater than 7, giving us\nthe observed probability $0.41\\bar{6}.$\n\n## Q2\n\n::: {.callout-note appearance=\"simple\"}\n\nWhat is the probability of rolling three six-sided dice and getting a value\ngreater than seven?\n\n:::\n\nWe can solve this in the same way. We'll do it just via enumeration this time,\nsince this book is about probability, not about simulations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npossible_rolls <- expand.grid(die_1 = 1:6, die_2 = 1:6, die_3 = 1:6)\npossible_rolls$sum <- possible_rolls$die_1 + possible_rolls$die_2 +\n\tpossible_rolls$die_3\n\nsum(possible_rolls$sum > 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 181\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(possible_rolls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 216\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(possible_rolls$sum > 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.837963\n```\n\n\n:::\n:::\n\n\n\nSo our answer is $181 / 216 \\approx 0.84.$\n\n\n## Q3\n\n::: {.callout-note appearance=\"simple\"}\n\nThe Yankees are playing the Red Sox. You're a diehard Sox fan and bet your\nfriend they'll win the game. You'll pay your friend $30 if the Sox lose and\nyour friend will have to pay you only $5 if the Sox win. What is the probability\nyou have intuitively assigned to the belief that the Red Sox will win?\n\n:::\n\nTo solve this problem, we just use the formula that relates the odds to the\nprobability of an event.\n\n\\begin{align*}\n\\frac{P(x)}{P(\\lnot x)} &= \\frac{30}{5} \\\\\n\\frac{P(x)}{1 - P(x)} &= \\frac{30}{5} \\\\\nP(x) &= \\frac{30}{5} \\left( 1 - P(x) \\right) \\\\\nP(x) &= \\frac{30}{5} - \\frac{30}{5} P(x) \\\\\nP(x) + \\frac{30}{5} P(x) &= \\frac{30}{5} \\\\\n\\frac{35}{5} P(x) &= \\frac{30}{5} \\\\\n7 \\cdot P(x) &= 6 \\\\\nP(x) &= \\frac{6}{7}.\n\\end{align*}\n\n\n<!-- end of file -->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}