[
  {
    "objectID": "posts/cp9/index.html",
    "href": "posts/cp9/index.html",
    "title": "Chapter 9: Bayesian Priors and Working with Probability Distributions",
    "section": "",
    "text": "options(\"scipen\" = 9999, \"digits\" = 4)\nThis chapter introduces the concept of a prior probability distribution, rather than a single point prior (which is also, technically, a prior distribution, but it is the degenerate distribution which is very boring)."
  },
  {
    "objectID": "posts/cp9/index.html#q1",
    "href": "posts/cp9/index.html#q1",
    "title": "Chapter 9: Bayesian Priors and Working with Probability Distributions",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nA friend finds a coin on the ground, flips it, and gets six heads in a row and then one tails. Give the beta distribution that describes this. Use integration to determine the probability that the true rate of flipping heads is between 0.4 and 0.6, reflecting the belief that the coin is reasonably fair.\n\n\n\nThe beta distribution associated with the data we observed is \\[\\text{Beta}(\\alpha = 6, \\beta = 1),\\] since flipping heads is the outcome of interest (the “success”). Integrating over the specified range, we get that \\[P(0.4 \\leq p \\leq 0.6) = \\int_{0.4}^{0.6} \\text{Beta}(p \\mid 6, 1) \\ \\mathrm{d}p. \\] Approximating the integral in R, we get the following result.\n\n(q1res &lt;- integrate(f = \\(x) dbeta(x, 6, 1), lower = 0.4, upper = 0.6))\n\n0.04256 with absolute error &lt; 0.00000000000000047\n\n\nOur prior probability that the true probability of flipping heads is between 0.4 and 0.6 is approximately \\(4.26\\%\\)."
  },
  {
    "objectID": "posts/cp9/index.html#q2",
    "href": "posts/cp9/index.html#q2",
    "title": "Chapter 9: Bayesian Priors and Working with Probability Distributions",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nCome up with a prior probability that the coin is fair. Use a beta distribution such that there is at least a 95% chance that the true rate of flipping heads is between 0.4 and 0.6.\n\n\n\nWe want to find a prior probability which guarantees \\[0.95 \\leq \\int_{0.4}^{0.6} \\text{Beta}(p \\mid \\alpha, \\beta) \\ \\mathrm{d}p.\\]\nWe know that \\(\\text{Beta}(1, 1)\\) is uniform, so the probability will be too small in the interval we want. If we increase both numbers at the same time so that \\(\\alpha = \\beta\\), we know that \\(p=0.5\\) will be the most likely value, which is desirable for the prior we want to construct. So, if we instead take \\(\\alpha = 6\\) and \\(\\beta = 6\\), we get the following result.\n\n(q2res1 &lt;- integrate(f = \\(x) dbeta(x, 6, 6), lower = 0.4, upper = 0.6))\n\n0.507 with absolute error &lt; 0.0000000000000056\n\n\nWe see that this prior still isn’t strong enough to give us the coverage we want in the given range. So let’s try doubling both of the parameters.\n\n(q2res2 &lt;- integrate(f = \\(x) dbeta(x, 12, 12), lower = 0.4, upper = 0.6))\n\n0.6727 with absolute error &lt; 0.0000000000000075\n\n\nEven this still doesn’t work – we need an extremely strong beta prior to guarantee the probability we are interested in. So now I’ll experiment with numbers, testing a grid until we get what we want.\n\nparms &lt;- 1:100\nq2res3 &lt;- sapply(\n    parms,\n    \\(ab) integrate(f = \\(x) dbeta(x, ab, ab), lower = 0.4, upper = 0.6)$value\n)\n\n# Get the minimum number where the probability is above the target.\nprior_parm &lt;- parms[[which(q2res3 &gt;= 0.95)[[1]]]]\n\nWe can obtain the correct probability bound by using a beta distribution where both parameters are equal to \\(48\\)."
  },
  {
    "objectID": "posts/cp9/index.html#q3",
    "href": "posts/cp9/index.html#q3",
    "title": "Chapter 9: Bayesian Priors and Working with Probability Distributions",
    "section": "Q3",
    "text": "Q3\n\n\n\n\n\n\nNow see how many more heads (with no more tails) it would take to convince you that there is a reasonable chance that this coin is not fair. In this case, let’s say that this means that our belief in the rate of the coin being between 0.4 and 0.6 drops below 0.5.\n\n\n\nWe know that the posterior distribution after we observe \\(k\\) more heads is equal to \\[\\text{Beta}(\\alpha = 48 + k, \\beta = 48),\\] so now what we want to find is \\[\n\\operatorname*{arg\\,min}_k \\int_{0.4}^{0.6} \\text{Beta}(p \\mid 48\n+ k, 48) \\ \\mathrm{d}p.\n\\] We’ll estimate \\(k\\) using a grid search.\n\nk_vals &lt;- 1L:100L\nintegral_values &lt;- sapply(\n    k_vals,\n    \\(k) integrate(\n        f = \\(x) dbeta(x, prior_parm + k, prior_parm),\n        lower = 0.4,\n        upper = 0.6\n    )$value\n)\n(min_k &lt;- k_vals[which(integral_values &lt; 0.5)[[1]]])\n\n[1] 24\n\n\nSo it would take 24 more heads in a row without any tail flips before our credibility that the coin is unfair is \\(50\\%\\) or higher.\nWe can make a plot of the results as well to see this.\n\nplot(\n    NULL, NULL,\n    xlim = c(0, 50), ylim = c(0, 1),\n    xlab = latex2exp::TeX(r'($k$)'),\n    ylab = latex2exp::TeX(r'($P(0.4 \\leq p \\leq 0.6)$)'),\n    axes = FALSE\n)\naxis(1, at = c(seq(0, 50, 10), min_k))\naxis(2, at = c(seq(0, 1, 0.2), 0.5))\nabline(h = integral_values[min_k], lty = 2)\nabline(v = min_k, lty = 2)\nlines(1:50, integral_values[1:50], type = \"o\", lwd = 1.5)"
  },
  {
    "objectID": "posts/cp7/index.html",
    "href": "posts/cp7/index.html",
    "title": "Chapter 7: Bayes’s Theorem with LEGO",
    "section": "",
    "text": "options(\"scipen\" = 9999, \"digits\" = 16)\nAgain, no notes. Mostly because this chapter is super short. Just for good measure, I’ll do the mathematician thing and say. Recall Bayes’ Theorem:\n\\[P(A \\mid B) = \\frac{P(B \\mid A) P(A)}{P(B)}.\\]"
  },
  {
    "objectID": "posts/cp7/index.html#q1",
    "href": "posts/cp7/index.html#q1",
    "title": "Chapter 7: Bayes’s Theorem with LEGO",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nKansas City, despite its name, sits on the border of two US states: Missouri and Kansas. The Kansas City metropolitan area consists of 15 counties, 9 in Missouri, and 6 in Kansas. The entire state of Kansas has 105 counties and Missouri has 114. Use Bayes’ theorem to calculate the probability that a relative who just moved to a country in the KC metropolitan area also lives in a county in Kansas. Make sure to show \\(P(\\text{Kansas})\\) (assuming your relative lives in either Kansas or Missouri), \\(P(\\text{Kansas City Metropolitan Area}),\\) and \\(P(\\text{Kansas City Metropolitan Area} \\mid \\text{Kansas})\\).\n\n\n\nAssuming that our relative is equally likely to have moved to any of the counties in the KC metropolitan area is an interesting choice, but is necessary for doing this problem. So we’ll assume that. Now, assuming that our relative has moved to either Kansas or Missouri, the overall probability that they are in Kansas is \\[P(\\text{Kansas}) = \\frac{105}{105 + 114} = \\frac{105}{219}.\\] The probability that our relative lives in Kansas City, assuming they live in either Kansas or Missouri (and again, that all counties are equally likely) is \\[P(\\text{KC}) = \\frac{15}{219}.\\] The probability that our relative lives in Kansas City, if we already knew that they lived in Kansas, is \\[P(\\text{KC} \\mid \\text{Kansas}) = \\frac{6/219}{105/219}=\\frac{6}{105}.\\] Then, by Bayes’ Theorem, we get that the probability that our relative lives in Kansas, given that they live in Kansas City, is \\[P(\\text{Kansas} \\mid \\text{KC}) = \\frac{P(\\text{KC} \\mid \\text{Kansas})\n\\ P(\\text{Kansas})}{P(\\text{KC})} = \\frac{\\frac{6}{105} \\frac{105}{219}}{\n\\frac{15}{219}} = \\frac{6/219}{15/219} = \\frac{6}{15} = 40\\%.\\]"
  },
  {
    "objectID": "posts/cp7/index.html#q2",
    "href": "posts/cp7/index.html#q2",
    "title": "Chapter 7: Bayes’s Theorem with LEGO",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nA deck of cards has 52 cards with suits that are either red or black. There are four aces in a deck of cards: two red and two black. You remove a red ace from the deck and shuffle the cards. Your friend pulls a black card. What is the probability that it is an ace?\n\n\n\nI like this problem more because it’s like orbs in an urn. We don’t have to make any other assumptions, this is just good normal probabilities. Anyways.\nThe probability that our friend draws an ace from the remaining 51 cards is \\[P(\\text{ace}) = \\frac{3}{51}.\\] (I am deliberately chosing not to reduce this fraction, because I don’t have to and because the solution is easier to understand if the fractions aren’t reduced.) The probability that our friend draws a black card from the remaining 51 cards (26 of which are black and 25 of which are red) is \\[P(\\text{black}) = \\frac{26}{51}.\\] Now, if our friend draws an ace, the probability that it is black (given that we know it is an ace already) is \\[P(\\text{black} \\mid \\text{ace}) = \\frac{P(\\text{black and ace})}{\nP(\\text{ace})} = \\frac{2 / 51}{3 / 51} = \\frac{2}{3}.\\] Now we can use Bayes’ theorem to get that \\[P(\\text{ace} \\mid \\text{black}) = \\frac{P(\\text{black} \\mid \\text{ace})\nP(\\text{black})}{P(\\text{ace})} = \\frac{\\frac{2}{3} \\ \\frac{3}{51}}{\n\\frac{26}{51}} = \\frac{2 / 51}{26 / 51} = \\frac{2}{26} = \\frac{1}{13}.\\] Since all the black cards are still in the deck, once we know that our friend has drawn a black card, the probability that is an ace is the same as if they had drawn from the full deck (if we hadn’t removed a card). How neat!"
  },
  {
    "objectID": "posts/cp5/index.html",
    "href": "posts/cp5/index.html",
    "title": "Chapter 5: the Beta Distribution",
    "section": "",
    "text": "library(latex2exp)\n\nWarning: package 'latex2exp' was built under R version 4.2.2\n\noptions(\"scipen\" = 9999, \"digits\" = 16)"
  },
  {
    "objectID": "posts/cp5/index.html#q1",
    "href": "posts/cp5/index.html#q1",
    "title": "Chapter 5: the Beta Distribution",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nYou want to use the beta distribution to determine whether or not a coin you have is a fair coin — meaning that the coin gives you heads and tails equally. You flip the coin 10 times and get 4 heads and 6 tails. Using the beta distribution, what is the probability that the coin will land on heads more than 60 percent of the time?\n\n\n\nThe probability we are interested in is \\[P(p \\geq 0.6) = \\int_0^{0.6} \\mathrm{Beta}(p, 4, 6) \\ \\mathrm{d}p.\\]\nWe could, of course, write out the distribution and integrate it: \\[P(p \\geq 0.6) = \\int_0^{0.6}  \\frac{1}{\\mathrm{B} \\left(4, 6\\right)}p^{4-1}(1-p)^{6-1} \\ \\mathrm{d}p.\\]\nHere, \\(\\mathrm{B}(a, b)\\) is the beta function, not the binomial distribution. In general, we could integrate \\[\\int p^{a - 1}(1-p)^{b - 1} \\ \\mathrm{d}p \\] for real, known constants \\(k, a, b\\), but the general integral in terms of \\(a\\) and \\(b\\) is non-elementary, so it is impractical to do this symbolically. The solution to this integral is called the “regularized incomplete beta function”, \\(I_x(a, b).\\) That means the solution to our original integral is \\[ P(p \\geq 0.6) = I_{0.6}(4, 6) = \\frac{\\mathrm{B}_{0.6}(4, 6)}{\\mathrm{B}(4, 6)}, \\] which we can’t actually calculate in base R (there is no built-in function for the incomplete beta function, although there could be a math identity that I don’t know that lets us calculate it with the tools at our disposal). Apparently this does not come up too often (for reasons we will see shortly), but there are a few packages that offer the incomplete beta function. I found: spsh, UCS, and the one I’ll load, zipfR. These all do other things so it seems potentially worthwhile to me to implement a package that ONLY includes the incomplete beta and gamma functions.\n\nzipfR::Ibeta(0.6, 4, 6) / beta(4, 6)\n\n[1] 0.9006474239999999\n\n\nNote that we could get the same thing by numerical integration.\n\nintegrate(\n    f = \\(p) (1 / beta(4, 6)) * p ^ 3 * (1 - p) ^ 5,\n    lower = 0,\n    upper = 0.6\n)\n\n0.9006474239999995 with absolute error &lt; 0.00000000000001\n\n\nThe two values are the same to like 15 digits of precision. So we really don’t need to go through all of that mess, we can just use numerical integration. As you may have guessed, R has multiple easier ways to do this. First, the beta density is already built into R, so we don’t have to write out the entire thing.\n\nintegrate(\n    f = \\(p) dbeta(p, 4, 6),\n    lower = 0,\n    upper = 0.6\n)\n\n0.900647424 with absolute error &lt; 0.00000000000001\n\n\nAnd of course, R has a built-in, better way to get this probability than using the standard numerical integrator. (And since the beta distribution is continuous, we don’t even have to worry about the boundaries this time.)\n\npbeta(0.6, 4, 6, lower.tail = TRUE)\n\n[1] 0.9006474239999999"
  },
  {
    "objectID": "posts/cp5/index.html#q2",
    "href": "posts/cp5/index.html#q2",
    "title": "Chapter 5: the Beta Distribution",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nYou flip the coin 10 more times and now have 9 heads and 11 tails total. What is the probability that the coin is fair, using our definition of fair, give or take 5%?\n\n\n\nSo, we can either numerically integrate, which allows us to specify whatever bounds we want (since this integrand is pretty well-behaved for this kind of thing).\n\nintegrate(\n    f = \\(p) dbeta(p, 9, 11),\n    lower = 0.45,\n    upper = 0.55\n)\n\n0.3098800156513043 with absolute error &lt; 0.0000000000000034\n\n\nOr we can just subtract.\n\npbeta(0.55, 9, 11) - pbeta(0.45, 9, 11)\n\n[1] 0.3098800156513036\n\n\nSometimes subtraction can be a problem with numerical computing, but if subtraction will cause a problem, so will numerical integration, so this latter method is what I would default to."
  },
  {
    "objectID": "posts/cp5/index.html#q3",
    "href": "posts/cp5/index.html#q3",
    "title": "Chapter 5: the Beta Distribution",
    "section": "Q3",
    "text": "Q3\n\n\n\n\n\n\nData is the best way to become more confident in your assertions. You flip the coin 200 more times and end up with 109 heads and 111 tails. Now what is the probability that the coin is fair, give or take 5%?\n\n\n\nAlright, I’ve already talked enough about how to solve these problems, this is just another of the same thing. So let’s just solve it.\n\npbeta(0.55, 109, 111) - pbeta(0.45, 109, 111)\n\n[1] 0.8589371426532764\n\n\nThat’s a pretty good chance, I think."
  },
  {
    "objectID": "posts/cp3/index.html",
    "href": "posts/cp3/index.html",
    "title": "Chapter 3",
    "section": "",
    "text": "options(\"scipen\" = 9999, \"digits\" = 16)"
  },
  {
    "objectID": "posts/cp3/index.html#q1",
    "href": "posts/cp3/index.html#q1",
    "title": "Chapter 3",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nWhat is the probability of rolling a 20 three times in a row on a 20-sided die?\n\n\n\nOf course, we could again solve by simulation 😁.\n\nset.seed(375)\nn_sims &lt;- 1000000\nrolls &lt;- tibble::tibble(\n    roll1 = sample(1:20, n_sims, replace = TRUE),\n    roll2 = sample(1:20, n_sims, replace = TRUE),\n    roll3 = sample(1:20, n_sims, replace = TRUE)\n)\n\nwith(rolls, mean(roll1 == 20 & roll2 == 20 & roll3 == 20))\n\n[1] 0.000124\n\n\nBut I don’t want anyone to take away my math degree, so we can show the analytical solution as well. (Besides, this event is quite rare, so the simulation will need a lot of samples, as you can see, to converge.)\nSince the probability of rolling a 20 on one die is \\(\\frac{1}{20}\\), and the rolls are (assumed) independent, we can calculate \\[P(\\text{three 20's}) = \\left( \\frac{1}{20} \\right)^3 = \\frac{1}{8000} = 0.000125.\\]"
  },
  {
    "objectID": "posts/cp3/index.html#q2",
    "href": "posts/cp3/index.html#q2",
    "title": "Chapter 3",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nThe weather report says there’s a 10 percent chance of rain tomorrow, and you forget your umbrella half the time you go out. What is the probability that you’ll be caught in the rain without an umbrella tomorrow?\n\n\n\nIf these two events are independent (which is kind of weird but seems to be what the question wants), we just multiply the two probabilities to get\n\\[P(\\text{no umbrella} \\cap \\text{rain}) = (10\\%) (50\\%) = 5\\%.\\]"
  },
  {
    "objectID": "posts/cp3/index.html#q3",
    "href": "posts/cp3/index.html#q3",
    "title": "Chapter 3",
    "section": "Q3",
    "text": "Q3\n\n\n\n\n\n\nRaw eggs have a \\(1/20000\\) probability of having salmonella. If you eat two raw eggs, what is the probability you ate a raw egg with salmonella?\n\n\n\nWe have to use the inclusion-exclusion rule here to avoid double-counting, since the two eggs having salmonella are not mutually exclusive (they could both have salmonella). So we get \\[\\begin{align*}\nP(\\text{ate a salmonella egg}) &= P(\\text{egg one had salmonella}) + P(\\text{egg two had salmonella})\n\\\\ &\\quad\\quad -P(\\text{both eggs had salmonella}) \\\\\n&= \\frac{1}{20000} + \\frac{1}{20000} - \\left(\\frac{1}{20000}\\right) ^2 \\\\\n&= \\frac{39,999}{400,000,000} \\approx 0.009\\%.\n\\end{align*}\\]"
  },
  {
    "objectID": "posts/cp3/index.html#q4",
    "href": "posts/cp3/index.html#q4",
    "title": "Chapter 3",
    "section": "Q4",
    "text": "Q4\n\n\n\n\n\n\nNote\n\n\n\nWhat is the probability of either flipping two heads in two coin tosses or rolling three 6s in three six-sided dice rolls?\n\n\nI hate how vaguely worded this question is, so I’ll list the assumptions that I think we are making.\nWe are doing one experiment that involves us flipping a coin twice (or flipping two coins) and also rolling a d6 three times (or rolling 3d6 one time). These two things are all mutually independent from each other, both coin flips are independent, and all three die rolls are independent. The die rolls and coin flips do not affect each other. Once we have done all of these things during the experiment, we want to know the probability that we flipped two heads OR (inclusize) we rolled three sixes.\nSo, we use inclusion-exclusion again. We get that\n\\[P(\\text{two heads}) = \\frac{1}{2}\\cdot \\frac{1}{2} = \\frac{1}{4},\\] \\[P(\\text{three sixes}) = \\left(\\frac{1}{6}\\right)^3 = \\frac{1}{216},\\] and thus \\[P(\\text{two heads} \\cup \\text{three sixes}) = \\frac{1}{4} + \\frac{1}{216} - \\frac{1}{4 \\cdot 216} = \\frac{219}{864} \\approx 25.35\\%.\\]"
  },
  {
    "objectID": "posts/cp1/index.html",
    "href": "posts/cp1/index.html",
    "title": "Chapter 1",
    "section": "",
    "text": "I already have a math degree where I focused on stats, so I kind of rushed through this chapter."
  },
  {
    "objectID": "posts/cp1/index.html#q1",
    "href": "posts/cp1/index.html#q1",
    "title": "Chapter 1",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nRewrite the following statements as equations using the mathematical notation you learned in the chapter:\n\nThe probability of rain is low\nThe probabiliy of rain given that it is cloudy is high\nThe probability of you having an umbrella given it is raining is much greater than the probability of you having an umbrella in general.\n\n\n\n\nNothing too out of the ordinary here!\n\n\\(\\displaystyle P\\left( \\text{rain} \\right) = \\text{low}.\\)\n\\(P \\left( \\text{rain} \\mid \\text{cloudy} \\right) = \\text{high}.\\)\n\\(P \\left( \\text{umbrella} \\mid \\text{raining} \\right) \\gg P \\left(\\text{umbrella}\\right).\\)"
  },
  {
    "objectID": "posts/cp1/index.html#q2",
    "href": "posts/cp1/index.html#q2",
    "title": "Chapter 1",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nOrganize the data you observe in the following scenario into a mathematical notation, using the techniques we’ve covered in this chapter. Then come up with a hypothesis to explain this data:\n\nYou come home from work and notice that your front door is open and the side window is broken. As you walk inside, you immediately notice that your laptop is missing.\n\n\n\n\nLet \\(D\\) represent the data we’ve observed. In order words, \\[D = \\{\\text{door open, window broken, laptop missing}\\}.\\]\nOur hypothesis might be \\[H_1: \\text{My house was robbed and they took my laptop!}\\]\nSo we might conjecture that \\[P(D \\mid H_1) = \\mathrm{high}.\\]"
  },
  {
    "objectID": "posts/cp1/index.html#q3",
    "href": "posts/cp1/index.html#q3",
    "title": "Chapter 1",
    "section": "Q3",
    "text": "Q3\n\n\n\n\n\n\nThe following scenario adds data to the previous one. Demonstrate how this new information changes your beliefs and come up with a second hypothesis to explain the data, using the notation you’ve learned in this chapter.\n\nA neighborhood child runs up to you and apologizes profusely for accidentally throwing a rock through your window. They claim that they saw the laptop and didn’t want it stolen so they opened the front door to grab it, and your laptop is safe at their house.\n\n\n\n\nNow we’ll let \\(D_U\\) represent our updated data (augmented with the new information that we learned from this child). Then, \\[D_U = \\{D, \\text{ child's explanation}\\}\\]\nand our new hypothesis could be \\[H_2: \\text{the child has my laptop.}\\]\nIf the child appears to be telling the truth, we could then conjecture that \\[P(D_U \\mid H_2) \\gg P(D_U \\mid H_1),\\] although we shouldn’t rule out the possibility that the child is being coerced or is a part of the robbery."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Doing Bayesian Statistics the Fun Way – Solutions",
    "section": "",
    "text": "I’ve been working through this book, and I decided to type my solutions so it will not be a problem when I inevitably lose the papers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 9: Bayesian Priors and Working with Probability Distributions\n\n\n\n\n\n\n\n\n\n\n\nJul 19, 2024\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 8: Priors, posteriors, and likelihoods of Bayes’ Theorem\n\n\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 7: Bayes’s Theorem with LEGO\n\n\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 6: Conditional Probability\n\n\n\n\n\n\n\n\n\n\n\nDec 11, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 5: the Beta Distribution\n\n\n\n\n\n\n\n\n\n\n\nDec 10, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 4\n\n\n\n\n\n\n\n\n\n\n\nDec 10, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 3\n\n\n\n\n\n\n\n\n\n\n\nDec 9, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 2\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2022\n\n\nZane Billings\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 1\n\n\n\n\n\n\n\n\n\n\n\nDec 6, 2022\n\n\nZane Billings\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "GNU Affero General Public License",
    "section": "",
    "text": "Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. &lt;https://fsf.org/&gt;\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\n\nThe GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\nDevelopers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.\nA secondary benefit of defending all users’ freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.\nThe GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.\nAn older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.\nThe precise terms and conditions for copying, distribution and modification follow.\n\n\n\n\n\n“This License” refers to version 3 of the GNU Affero General Public License.\n“Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n“The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations.\nTo “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.\nA “covered work” means either the unmodified Program or a work based on the Program.\nTo “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\nTo “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\n\n\nThe “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.\nA “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\nThe “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\nThe “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work’s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\nThe Corresponding Source for a work in source code form is that same work.\n\n\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\n\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work’s users, your or third parties’ legal rights to forbid circumvention of technological measures.\n\n\n\nYou may convey verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\n\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\n\n\nThe work must carry prominent notices stating that you modified it, and giving a relevant date.\n\n\nThe work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to “keep intact all notices”.\n\n\nYou must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.\n\n\nIf the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.\n\n\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation’s users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\n\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\n\n\nConvey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.\n\n\nConvey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.\n\n\nConvey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.\n\n\nConvey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.\n\n\nConvey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.\n\n\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\nA “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n“Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\n\n\n“Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\n\n\nDisclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or\n\n\nRequiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or\n\n\nProhibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or\n\n\nLimiting the use for publicity purposes of names of licensors or authors of the material; or\n\n\nDeclining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or\n\n\nRequiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.\n\n\nAll other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\n\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\n\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\n\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\nAn “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party’s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\n\n\nA “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor’s “contributor version”.\nA contributor’s “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor’s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\nIn the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient’s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\nA patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\n\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\n\n\nNotwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.\n\n\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\n\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\nEND OF TERMS AND CONDITIONS\n\n\n\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the “copyright” line and a pointer to where the full notice is found.\n    &lt;one line to give the program's name and a brief idea of what it does.&gt;\n    Copyright (C) &lt;year&gt;  &lt;name of author&gt;\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\nAlso add information on how to contact you by electronic and paper mail.\nIf your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a “Source” link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a “copyright disclaimer” for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/."
  },
  {
    "objectID": "LICENSE.html#preamble",
    "href": "LICENSE.html#preamble",
    "title": "GNU Affero General Public License",
    "section": "",
    "text": "The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\nDevelopers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.\nA secondary benefit of defending all users’ freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.\nThe GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.\nAn older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.\nThe precise terms and conditions for copying, distribution and modification follow."
  },
  {
    "objectID": "LICENSE.html#terms-and-conditions",
    "href": "LICENSE.html#terms-and-conditions",
    "title": "GNU Affero General Public License",
    "section": "",
    "text": "“This License” refers to version 3 of the GNU Affero General Public License.\n“Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n“The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations.\nTo “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.\nA “covered work” means either the unmodified Program or a work based on the Program.\nTo “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\nTo “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\n\n\nThe “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.\nA “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\nThe “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\nThe “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work’s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\nThe Corresponding Source for a work in source code form is that same work.\n\n\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\n\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work’s users, your or third parties’ legal rights to forbid circumvention of technological measures.\n\n\n\nYou may convey verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\n\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\n\n\nThe work must carry prominent notices stating that you modified it, and giving a relevant date.\n\n\nThe work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to “keep intact all notices”.\n\n\nYou must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.\n\n\nIf the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.\n\n\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation’s users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\n\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\n\n\nConvey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.\n\n\nConvey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.\n\n\nConvey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.\n\n\nConvey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.\n\n\nConvey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.\n\n\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\nA “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n“Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\n\n\n“Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\n\n\nDisclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or\n\n\nRequiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or\n\n\nProhibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or\n\n\nLimiting the use for publicity purposes of names of licensors or authors of the material; or\n\n\nDeclining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or\n\n\nRequiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.\n\n\nAll other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\n\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\n\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\n\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\nAn “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party’s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\n\n\nA “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor’s “contributor version”.\nA contributor’s “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor’s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\nIn the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient’s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\nA patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\n\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\n\n\nNotwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.\n\n\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\n\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\nEND OF TERMS AND CONDITIONS"
  },
  {
    "objectID": "LICENSE.html#how-to-apply-these-terms-to-your-new-programs",
    "href": "LICENSE.html#how-to-apply-these-terms-to-your-new-programs",
    "title": "GNU Affero General Public License",
    "section": "",
    "text": "If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the “copyright” line and a pointer to where the full notice is found.\n    &lt;one line to give the program's name and a brief idea of what it does.&gt;\n    Copyright (C) &lt;year&gt;  &lt;name of author&gt;\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\nAlso add information on how to contact you by electronic and paper mail.\nIf your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a “Source” link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a “copyright disclaimer” for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/."
  },
  {
    "objectID": "posts/cp2/index.html",
    "href": "posts/cp2/index.html",
    "title": "Chapter 2",
    "section": "",
    "text": "What is the probability of rolling two six-sided dice and getting a value greater than 7?\n\n\n\nIn general, I think it’s worth solving this problem via simulation, because solving via enumeration scales much worse. (We could also solve this problem analytically, but that scales even worse than the enumerative solution.) So first I’ll show how to solve via simulation.\n\n# The number of simulations we will do. As this number gets larger, our\n# simulated probability will approach the theoretical probability.\nN_rolls &lt;- 10000\n\n# Simulate the two die rolls. You could do this with one call of sample but\n# for expository purposes this is easier.\ndie_1 &lt;- sample(1:6, N_rolls, replace = TRUE)\ndie_2 &lt;- sample(1:6, N_rolls, replace = TRUE)\n\n# Calculate the proportion of sums that are greater than 7\nsum &lt;- die_1 + die_2\nmean(sum &gt; 7)\n\n[1] 0.4238\n\n\nWe can also use R to solve this problem by enumeration.\n\npossible_rolls &lt;- expand.grid(die_1 = 1:6, die_2 = 1:6)\npossible_rolls$sum &lt;- possible_rolls$die_1 + possible_rolls$die_2\n\nmean(possible_rolls$sum &gt; 7)\n\n[1] 0.4166667\n\n\nAs you can see, our simulated solution is extremely close to the “true” answer that we get by enumerating the sample space. If you prefer the answer as a fraction, we can also just count.\n\n# Number of possible combinations that sum to &gt; 7\nsum(possible_rolls$sum  &gt; 7)\n\n[1] 15\n\n# Number of possible combinations\nnrow(possible_rolls)\n\n[1] 36\n\n\nSo 15 out of the 36 possible combinations have a sum greater than 7, giving us the observed probability \\(0.41\\bar{6}.\\)\n\n\n\n\n\n\n\n\n\nWhat is the probability of rolling three six-sided dice and getting a value greater than seven?\n\n\n\nWe can solve this in the same way. We’ll do it just via enumeration this time, since this book is about probability, not about simulations.\n\npossible_rolls &lt;- expand.grid(die_1 = 1:6, die_2 = 1:6, die_3 = 1:6)\npossible_rolls$sum &lt;- possible_rolls$die_1 + possible_rolls$die_2 +\n    possible_rolls$die_3\n\nsum(possible_rolls$sum &gt; 7)\n\n[1] 181\n\nnrow(possible_rolls)\n\n[1] 216\n\nmean(possible_rolls$sum &gt; 7)\n\n[1] 0.837963\n\n\nSo our answer is \\(181 / 216 \\approx 0.84.\\)\n\n\n\n\n\n\n\n\n\nThe Yankees are playing the Red Sox. You’re a diehard Sox fan and bet your friend they’ll win the game. You’ll pay your friend $30 if the Sox lose and your friend will have to pay you only $5 if the Sox win. What is the probability you have intuitively assigned to the belief that the Red Sox will win?\n\n\n\nTo solve this problem, we just use the formula that relates the odds to the probability of an event.\n\\[\\begin{align*}\n\\frac{P(x)}{P(\\lnot x)} &= \\frac{30}{5} \\\\\n\\frac{P(x)}{1 - P(x)} &= \\frac{30}{5} \\\\\nP(x) &= \\frac{30}{5} \\left( 1 - P(x) \\right) \\\\\nP(x) &= \\frac{30}{5} - \\frac{30}{5} P(x) \\\\\nP(x) + \\frac{30}{5} P(x) &= \\frac{30}{5} \\\\\n\\frac{35}{5} P(x) &= \\frac{30}{5} \\\\\n7 \\cdot P(x) &= 6 \\\\\nP(x) &= \\frac{6}{7}.\n\\end{align*}\\]"
  },
  {
    "objectID": "posts/cp2/index.html#q1",
    "href": "posts/cp2/index.html#q1",
    "title": "Chapter 2",
    "section": "",
    "text": "What is the probability of rolling two six-sided dice and getting a value greater than 7?\n\n\n\nIn general, I think it’s worth solving this problem via simulation, because solving via enumeration scales much worse. (We could also solve this problem analytically, but that scales even worse than the enumerative solution.) So first I’ll show how to solve via simulation.\n\n# The number of simulations we will do. As this number gets larger, our\n# simulated probability will approach the theoretical probability.\nN_rolls &lt;- 10000\n\n# Simulate the two die rolls. You could do this with one call of sample but\n# for expository purposes this is easier.\ndie_1 &lt;- sample(1:6, N_rolls, replace = TRUE)\ndie_2 &lt;- sample(1:6, N_rolls, replace = TRUE)\n\n# Calculate the proportion of sums that are greater than 7\nsum &lt;- die_1 + die_2\nmean(sum &gt; 7)\n\n[1] 0.4238\n\n\nWe can also use R to solve this problem by enumeration.\n\npossible_rolls &lt;- expand.grid(die_1 = 1:6, die_2 = 1:6)\npossible_rolls$sum &lt;- possible_rolls$die_1 + possible_rolls$die_2\n\nmean(possible_rolls$sum &gt; 7)\n\n[1] 0.4166667\n\n\nAs you can see, our simulated solution is extremely close to the “true” answer that we get by enumerating the sample space. If you prefer the answer as a fraction, we can also just count.\n\n# Number of possible combinations that sum to &gt; 7\nsum(possible_rolls$sum  &gt; 7)\n\n[1] 15\n\n# Number of possible combinations\nnrow(possible_rolls)\n\n[1] 36\n\n\nSo 15 out of the 36 possible combinations have a sum greater than 7, giving us the observed probability \\(0.41\\bar{6}.\\)"
  },
  {
    "objectID": "posts/cp2/index.html#q2",
    "href": "posts/cp2/index.html#q2",
    "title": "Chapter 2",
    "section": "",
    "text": "What is the probability of rolling three six-sided dice and getting a value greater than seven?\n\n\n\nWe can solve this in the same way. We’ll do it just via enumeration this time, since this book is about probability, not about simulations.\n\npossible_rolls &lt;- expand.grid(die_1 = 1:6, die_2 = 1:6, die_3 = 1:6)\npossible_rolls$sum &lt;- possible_rolls$die_1 + possible_rolls$die_2 +\n    possible_rolls$die_3\n\nsum(possible_rolls$sum &gt; 7)\n\n[1] 181\n\nnrow(possible_rolls)\n\n[1] 216\n\nmean(possible_rolls$sum &gt; 7)\n\n[1] 0.837963\n\n\nSo our answer is \\(181 / 216 \\approx 0.84.\\)"
  },
  {
    "objectID": "posts/cp2/index.html#q3",
    "href": "posts/cp2/index.html#q3",
    "title": "Chapter 2",
    "section": "",
    "text": "The Yankees are playing the Red Sox. You’re a diehard Sox fan and bet your friend they’ll win the game. You’ll pay your friend $30 if the Sox lose and your friend will have to pay you only $5 if the Sox win. What is the probability you have intuitively assigned to the belief that the Red Sox will win?\n\n\n\nTo solve this problem, we just use the formula that relates the odds to the probability of an event.\n\\[\\begin{align*}\n\\frac{P(x)}{P(\\lnot x)} &= \\frac{30}{5} \\\\\n\\frac{P(x)}{1 - P(x)} &= \\frac{30}{5} \\\\\nP(x) &= \\frac{30}{5} \\left( 1 - P(x) \\right) \\\\\nP(x) &= \\frac{30}{5} - \\frac{30}{5} P(x) \\\\\nP(x) + \\frac{30}{5} P(x) &= \\frac{30}{5} \\\\\n\\frac{35}{5} P(x) &= \\frac{30}{5} \\\\\n7 \\cdot P(x) &= 6 \\\\\nP(x) &= \\frac{6}{7}.\n\\end{align*}\\]"
  },
  {
    "objectID": "posts/cp4/index.html",
    "href": "posts/cp4/index.html",
    "title": "Chapter 4",
    "section": "",
    "text": "options(\"scipen\" = 9999, \"digits\" = 4)"
  },
  {
    "objectID": "posts/cp4/index.html#q1",
    "href": "posts/cp4/index.html#q1",
    "title": "Chapter 4",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nWhat are the parameters of the binomial distribution for the probability of rolling either a 1 or a 20 on a 20-sided die, if we roll the die 12 times?\n\n\n\nThe parameters are \\(n = 12\\) and \\(p = 2/20 = 1/10 = 0.1\\)."
  },
  {
    "objectID": "posts/cp4/index.html#q2",
    "href": "posts/cp4/index.html#q2",
    "title": "Chapter 4",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nThere are four aces in a deck of 52 cards. If you pull a card, return the card, then reshuffle, and pull a card again, how many ways can you pull just one ace in five pulls?\n\n\n\nSince we’re drawing with replacement, we are doing \\(5\\) Bernoulli trials, each with a probability of \\(4 / 52 = 1 / 13\\). So we can use the Binomial distribution to get this probability. We can get that\n\\[P(1 \\text{ ace in } 5 \\text{ pulls}) = B\\left( x = 1 \\mid n = 5, \\ p = \\frac{1}{13} \\right),\\]\nwhich we would then calculate as\n\\[P(1 \\text{ ace in } 5 \\text{ pulls}) = \\left( 5\\atop{1} \\right) \\left(\\frac{1}{13}\\right)^1\\left(\\frac{12}{13}\\right)^4.\\]\nTo get the answer, we can certainly write out the entire formula in R.\n\nchoose(5, 1) * (1 / 13) ^ 1 * (12 / 13) ^ 4\n\n[1] 0.2792\n\n\nBut here’s a sneaky trick. Since R was designed for statistical computing, a fast version of the binomial distribution is already built in.\n\ndbinom(x = 1, size = 5, prob = 1 / 13)\n\n[1] 0.2792"
  },
  {
    "objectID": "posts/cp4/index.html#q3",
    "href": "posts/cp4/index.html#q3",
    "title": "Chapter 4",
    "section": "Q3",
    "text": "Q3\n\n\n\n\n\n\nFor the example in question 2, what is the probability of pulling 5 aces in 10 pulls (remember the card is shuffled back in the deck when it is pulled)?\n\n\n\nThis time I’ll just use the R calculation, since this problem is worked out exactly the same way. The probability we want to estimate is \\[P(5 \\text{ aces in } 10 \\text{ pulls}) = B\\left( x = 5 \\mid n = 10, \\ p = \\frac{1}{13} \\right),\\] which we can approximate in R.\n\ndbinom(x = 5, size = 10, prob = 1 / 13)\n\n[1] 0.0004549\n\n\nNote that this probability is quite small – that is because both drawing this many aces is difficult, and because this is the probability of drawing EXACTLY five aces."
  },
  {
    "objectID": "posts/cp4/index.html#q4",
    "href": "posts/cp4/index.html#q4",
    "title": "Chapter 4",
    "section": "Q4",
    "text": "Q4\n\n\n\n\n\n\nWhen you’re searching for a new job, it’s always helpful to have more than one offer on the table so you can use it in negotiations. If you have a 1/5 probability of receiving a job offer when you interview, and you interview with seven companies in a month, what is the probability you’ll have at least two competing offers by the end of that month.\n\n\n\nThis time we have to consider more than just one of these probabilities, because we want the probability of at least two offers. Let \\(O\\) be the number of competing offers we receive. Then we can write \\[P(O \\geq 2) = B\\left(O = 2 \\mid n = 7, p = \\frac{1}{5}\\right) + \\ldots + B\\left(O = 7 \\mid n = 7, p = \\frac{1}{5}\\right),\\] which we could also write more compactly as \\[P(O \\geq 2) = \\sum_{o = 2}^7 B\\left(O = o \\mid n = 7, p = \\frac{1}{5}\\right).\\] Since dbinom() is vectorized, we can calculate this pretty easily in R.\n\nsum( dbinom(x = 2:7, size = 7, prob = 1 / 5) )\n\n[1] 0.4233\n\n\nOf course, as you might have guessed, R has a shortcut for this: the pbinom function. This way is a little bit tricky though, because the way we have to specify the probability we want is a little more complicated than we would hope.\nThe lower.tail parameter specifies whether we want the cumulative probability above (FALSE) or below (TRUE) the argument(s) for the q parameter. For above, the probability is \\(P(X &gt; x)\\), but for below, it is \\(P(X \\leq x)\\). Since we have a positive probability at \\(P(X = x)\\), we can’t just throw in 2 as the boundary, it will not give the correct answer. Instead we can use this function to calculate \\[P(X \\geq 2) = 1 - P(X &lt; 2) = 1 - P(X \\leq 1) = P(X &gt; 1).\\] This last two forms are the two that we can get with pbinom, as I’ll calculate below.\n\n# P(O &gt; 1)\npbinom(q = 1, size = 7, prob =  1 / 5, lower.tail = FALSE)\n\n[1] 0.4233\n\n# 1 - P(O &lt;= 1)\n1 - pbinom(q = 1, size = 7, prob = 1 / 5)\n\n[1] 0.4233\n\n\nOf course all three of these solutions are equivalent, so no matter which way we do it, we get a probability of about \\(42\\%\\)."
  },
  {
    "objectID": "posts/cp4/index.html#q5",
    "href": "posts/cp4/index.html#q5",
    "title": "Chapter 4",
    "section": "Q5",
    "text": "Q5\n\n\n\n\n\n\nYou get a bunch of recruiter emails and find out you have 25 interviews lined up in the next month. Unfortunately, you know that this will leave you exhausted, and the probability of getting an offer will drop to 1/10 if you’re tired. You really don’t want to go on this many interviews unless you are at least twice as likely to get at least two competing offers. Are you more likely to get at least two offers if you go for 25 interviews, or stick to just 7?\n\n\n\nSo, what we actually want to calculate is the ratio \\[\\frac{P\\left( O \\geq 2 \\mid n =  7, \\ p = \\frac{1}{ 5} \\right)}\n       {P\\left( O \\geq 2 \\mid n = 25, \\ p = \\frac{1}{10} \\right)}.\\] In the previous problem, we calculated the numerator, so now we need to calculate the denominator. Fortunately, we can do this the same way, using the same practical considerations we did less time. Just to make this issue about the boundary more clear, I’ll write out the R code for doing it all three ways.\n\nsum(dbinom(2:25, size = 25, prob = 1 / 10))\n\n[1] 0.7288\n\npbinom(q = 1, size = 25, prob = 1 / 10, lower.tail = FALSE)\n\n[1] 0.7288\n\n1 - pbinom(q = 1, size = 25, prob = 1 / 10)\n\n[1] 0.7288\n\n\nWe can then approximate the ratio we are interested in as \\[\\frac{42\\%}{73\\%} \\approx 0.58 &gt; 0.50,\\] and I just realized that it probably makes more sense to invert this ratio. So let’s do that: \\[\\frac{73\\%}{42\\%} \\approx 1.74 &lt; 2,\\] so we will improve our chances of getting at least two competing offers, but we will not be at least twice as likely, so we want to stick with just \\(7\\) interviews instead of \\(25\\). :::"
  },
  {
    "objectID": "posts/cp6/index.html",
    "href": "posts/cp6/index.html",
    "title": "Chapter 6: Conditional Probability",
    "section": "",
    "text": "options(\"scipen\" = 9999, \"digits\" = 6)\nThis chapter introduces the concept of conditional probability, which, in my opinion, is one of the least intuitive parts of probability. I didn’t take a lot of notes here, but I did at least write down what is covered in this section. For a more detailed explanation of conditional probability, I recommend either Probability for the Enthusiastic Beginner by Morin or Mathematical Statistics with Applications by Wackerly et al.. (I make no money from these links, sales, or promotions.)"
  },
  {
    "objectID": "posts/cp6/index.html#q1",
    "href": "posts/cp6/index.html#q1",
    "title": "Chapter 6: Conditional Probability",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nWhat piece of information would we need in order to use Bayes’ theorem to determine the probability that someone in 2010 who had GBS also had the flu vaccine that year?\n\n\n\nThis is another question that I have beef with. I think it is reasonable would interpret “the probability that someone in 2010 who had GBS also had the flu vaccine that year” as \\(P(\\text{GBS} \\cap \\text{flu vaccine}).\\) But the book wants us to read this as \\(P(\\text{flu vaccine} \\mid \\text{GBS}),\\) which I would tend to word as (unambiguously) “the probability that someone in 2010 received the flu vaccine, given that they had GBS.” Since conditional/joint probabilities are often vague like this, I think it is best to be specific instead of just making the word also italicized.\nBut anyways. The formula for this calculation is \\[P(\\text{flu vaccine} \\mid \\text{GBS}) = \\frac{P(\\text{flu vaccine}) \\\nP(\\text{GBS} \\mid \\text{flu vaccine})}{P(\\text{GBS})},\\] so the main thing we are missing is \\(P(\\text{GBS})\\), which would allow us to calculate \\(P(\\text{GBS} \\cap \\text{flu vaccine})\\), the only other part we were not given in the chapter."
  },
  {
    "objectID": "posts/cp6/index.html#q2",
    "href": "posts/cp6/index.html#q2",
    "title": "Chapter 6: Conditional Probability",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nWhat is the probability that a random person picked from the population is female and is not color blind?\n\n\n\nMost of the details for this problem are given in the chapter. Note that for this example, the book is talking about the joint probability, despite what I think is very similar wording to the previous question, but maybe I need to work on my reading comprehension. Anyways, the relevant formula would be\n\\[P(\\text{female} \\cap \\lnot \\text{color blind}) = P(\\text{female}) \\ P(\\lnot\n\\text{color blind} \\mid \\text{female}).\\]\nAssuming male individuals and female individuals are equally likely in the population and are the only two options (neither of which is true, but they are both assumed to be true by the book for this question), we have all of the information that we need to solve this. We get\n\\[P(\\text{female} \\cap \\lnot \\text{color blind}) = (0.5)(1 - 0.005) = 0.4975.\\] So the probability is \\(49.75\\%,\\) since the incidence of color blindness among female members of the population is extremely low."
  },
  {
    "objectID": "posts/cp6/index.html#q3",
    "href": "posts/cp6/index.html#q3",
    "title": "Chapter 6: Conditional Probability",
    "section": "Q3",
    "text": "Q3\n\n\n\n\n\n\nWhat is the probability that a male who received the flu vaccine in 2010 is either color blind or has GBS?\n\n\n\nI’ll steal from the notation that the book uses here, and let \\(A\\) be the event that this individual is colorblind, given that they are male, and let \\(B\\) be the event that this individual has GBS, given that they got the flu vaccine. Note that this makes several independence assumptions (being male or color blind are both independent of the flu vaccine and GBS, and vice versa), because if we don’t make this independence assumptions we would lack the necessary information to solve this problem.\nNow, the probability we want to find is \\[P(A \\cup B) = P(A) + P(B) - P(A \\cap B) = P(A) + P(B) - P(A) P(B \\mid A).\\]\nIn the chapter, we previously learned the values for \\(P(A)\\) and \\(P(B)\\), but I think this is where the problem starts to break down. The chapter hasn’t dealt with any really complicated events like this at all, and it doesn’t really make sense to say that \\[P(B \\mid A) = P( (\\text{GBS} \\mid \\text{flu vaccine}) \\mid (\\text{color\nblind} \\mid \\text{male}) ).\\]\nSo of course the book does not discuss how to address this problem, as it really isn’t very well-formed, it just says to assume \\(P(B \\mid A) = P(B).\\) This is true if we make all of the independence assumptions above, but again, stating the problem in this way doesn’t really make sense.\nSo, I’ll detour and work through the problem in a way that I think is a bit more logical and arrives at the same answer.\nWhen I read the question, the probability that I think we want to get is \\[P(\\text{color blind} \\cup \\text{GBS} \\mid \\text{male} \\cap \\text{flu vaccine}).\\] This is much more complex than any of the examples in the book, but fortunately for us, we can work it out using the laws of set theory that the book has not discussed at all. Note that, by definition of conditional probability,\n\\[\nP(\\text{color blind} \\cup \\text{GBS} \\mid \\text{male} \\cap \\text{flu vaccine})\n= \\frac{P\\left[(\\text{color blind} \\cup \\text{GBS}) \\cap (\\text{male} \\cap \\text{flu vaccine}) \\right]}{P(\\text{male} \\cap \\text{flu vaccine})}.\n\\] Now, the denominator is pretty easy to sort out. Since we don’t have any information on how being male affects flu vaccine coverage, we’ll assume they are independent (although in real life, this is not true – CDC flu vaccine coverage data for the USA suggests that males under 65 are less likely to get flu vaccines than females of the same age, but this different goes away for the elderly). Under this assumption, we get \\[P(\\text{male} \\cap \\text{flu vaccine}) = P(\\text{male}) \\ P(\\text{flu\nvaccine}),\\] which is easy enough to calculate with the data we have.\nSo it remains to deal with the beast of a numerator. For ease-of-use here, let’s define the event \\(C \\equiv \\text{color blind} \\cup \\text{GBS}\\) and the event \\(D \\equiv \\text{male} \\cap \\text{flu vaccine}.\\) Then, we get that\n\\[\nP(C \\cap D) = \\left(\\text{color blind} \\cup \\text{GBS}\\right) \\cap D =\n(\\text{color blind} \\cap D) \\cup (\\text{GBS} \\cap D)\n\\] by using the distributive rules of the \\(cap\\) and \\(cup\\) operators. These are not covered in the book, but one potential resource (in terms of set theory) is here. Many books on probability will also briefly cover this material.\nNow, we have a union, and we can use the addition (or inclusion-exclusion) principle to evaluate the probability. We get that\n\\[\\begin{align*}\nP((\\text{color blind} \\cap D) \\cup (\\text{GBS} \\cap D)) &=\nP(\\text{color blind} \\cap D) + P(\\text{GBS} \\cap D) - P(\\text{color blind}\n\\cap \\text{GBS} \\cap D) \\\\\n&=  P(\\text{color blind} \\cap \\text{male} \\cap \\text{flu vaccine}) + P(\\text{GBS} \\cap \\text{male} \\cap \\text{flu vaccine}) \\\\ &\\quad \\quad - P(\\text{color blind}\n\\cap \\text{GBS} \\cap (\\text{male} \\cap \\text{flu vaccine})).\n\\end{align*}\\]\nUnder the same set of independence assumptions before, we can make the following set of simplifications: \\[\\begin{align*}\nP(\\text{color blind} \\cap \\text{male} \\cap \\text{flu vaccine}) &=\n    P(\\text{color blind} \\cap \\text{male}) \\ P(\\text{flu vaccine}) \\\\\nP(\\text{GBS} \\cap \\text{male} \\cap \\text{flu vaccine}) &=\n    P(\\text{GBS} \\cap \\text{flu vaccine}) \\ P(\\text{male}) \\\\\nP(\\text{color blind} \\cap \\text{GBS} \\cap\n    (\\text{male} \\cap \\text{flu vaccine})) &=\n    P(\\text{GBS} \\cap \\text{flu vaccine} \\cap \\text{male} \\cap\n    \\text{color blind}) \\\\\n    &= P(\\text{male} \\cap \\text{color blind}) \\ P(\\text{GBS} \\cap\n    \\text{flu vaccine}).\n\\end{align*}\\]\nNow, it would be just about impossible to write all that out in text format and still have it fit into the margins of this page. But nonethless we will try. We get that, overall,\n\n\\[\\begin{equation*}P(\\text{color blind} \\cup \\text{GBS} \\mid \\text{male} \\cap \\text{flu vaccine}) =\n\\frac{\n\\left(\\begin{split}\n    &P(\\text{color blind} \\cap \\text{male}) \\ P(\\text{flu vaccine}) \\\\\n    &\\quad + P(\\text{GBS} \\cap \\text{flu vaccine}) \\ P(\\text{male}) \\\\\n    &\\quad - P(\\text{male} \\cap \\text{color blind}) \\ P(\\text{GBS} \\cap\n    \\text{flu vaccine})\n\\end{split}\\right)\n}{\nP(\\text{male}) \\ P(\\text{flu\nvaccine})\n}.\n\\end{equation*}\\]\n\nI can’t figure out how to make the text of that smaller in this quarto HTML document and it’s too much work to figure out how to size the LaTeX code in a way that’s supported by MathJax so that’s the best that you’re getting from me.\nAnyways, if we want to solve this with the information given in the book, we have to get rid of all of the \\(P(\\text{flu vaccine})\\), since we don’t know that. Fortunately for us, they cancel out. First, let’s plug in the numbers that we do know so this is a bit less cumbersome to type. Let\n\\[\\mathrm{P} = P(\\text{color blind} \\cup \\text{GBS} \\mid \\text{male} \\cap \\text{flu vaccine})\\]\nfor convenience (should’ve said this earlier but it’s too late now). We get \\[\\begin{align*}\n\\mathrm{P} & =\n\\frac{\n\\left(\\begin{split}\n    &P(\\text{color blind} \\cap \\text{male}) \\ P(\\text{flu vaccine}) \\\\\n    &\\quad + P(\\text{GBS} \\cap \\text{flu vaccine}) \\ P(\\text{male}) \\\\\n    &\\quad - P(\\text{male} \\cap \\text{color blind}) \\ P(\\text{GBS} \\cap\n    \\text{flu vaccine})\n\\end{split}\\right)\n}{\nP(\\text{male}) \\ P(\\text{flu\nvaccine})\n} \\\\ \\\\ &= \\frac{\n0.04 \\ P(\\text{FV}) + 0.5 \\ P(\\text{GBS} \\mid \\text{FV}) \\ P(\\text{FV}) -\n    0.04 \\ P(\\text{GBS} \\mid \\text{FV}) \\ P(\\text{FV})\n}{\n0.5 \\ P(\\text{FV})\n} \\\\ &=\n\\frac{P(\\text{FV})\\left( 0.04 + 0.46 \\ P(\\text{GBS} \\mid \\text{FV}) \\right)}{\n0.5 \\ P(\\text{FV})\n} \\\\\n&= \\frac{0.04 + 0.46 (3 / 100,000)}{0.5} \\\\\n&= 0.0800276 = 8.00276\\%.\n\\end{align*}\\]\nThis is the same answer that the book has, so their shortcut that I don’t like apparently works (and saves a lot of time). But I had a good time proving that it was true without shortcuts, so I guess it was worth it.\nWell, that’s all for this chapter!"
  },
  {
    "objectID": "posts/cp8/index.html",
    "href": "posts/cp8/index.html",
    "title": "Chapter 8: Priors, posteriors, and likelihoods of Bayes’ Theorem",
    "section": "",
    "text": "options(\"scipen\" = 9999, \"digits\" = 4)\nThis chapter is mostly about Bayes’ factors without saying that it’s about Bayes factors, but it also discusses what happens when prior beliefs change (in a particularly simple case). I personally don’t think this chapter generalizes very well to more complex analyses, but I guess the point of this book is to be beginner-friendly. So maybe I’m at the point on my Bayes journey where I am confident beyond what I actually know ¯\\(ツ)/¯."
  },
  {
    "objectID": "posts/cp8/index.html#q1",
    "href": "posts/cp8/index.html#q1",
    "title": "Chapter 8: Priors, posteriors, and likelihoods of Bayes’ Theorem",
    "section": "Q1",
    "text": "Q1\n\n\n\n\n\n\nAs mentioned, you mighty disagree with the original probability assigned to the likelihood:\n\\[P(\\text{broken window, open front door, missing laptop} \\mid \\text{robbed}) = \\frac{3}{10}.\\]\nIf we change this probability to \\(1/100\\), how does this change our strength in believing \\(H_1\\) over \\(H_2\\)?\n\n\n\n(I bolded the part that was supposed to be in the question but then wasn’t.) If we do this, it only changes the numerator of our ratio and we get that \\[B = \\frac{3 / 100000}{1 / 21,900,000} = 675. \\] So this decreases our ratio by a factor of 10, the same amount that our beliefs changed."
  },
  {
    "objectID": "posts/cp8/index.html#q2",
    "href": "posts/cp8/index.html#q2",
    "title": "Chapter 8: Priors, posteriors, and likelihoods of Bayes’ Theorem",
    "section": "Q2",
    "text": "Q2\n\n\n\n\n\n\nHow unlikely would you have to believe being robbed is — our prior for \\(H_1\\) — in order for the ratio of \\(H_1\\) to \\(H_2\\) to be one?\n\n\n\nCall our unknown prior probability \\(p\\). Then we solve: \\[\\frac{p \\ \\frac{3}{100}}{1 / 21,900,000} \\implies p = \\frac{1}{65,700}.\\] Our prior probability would need to decrease by a factor of 657."
  }
]